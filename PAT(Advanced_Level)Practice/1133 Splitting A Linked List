#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<map>
#include<set>
#include<bits/stdc++.h>

using namespace std;

struct linked{
    int adr;
    int val;
    int nex;
};

int main(void){
    string s3,s6;
    int s0;
    int n, m, i, j, num;
    cin>>s0>>n>>m;
    vector<int> vec;
    map<int, linked> mp;
    string end = {"-1"};
    set<int> st;
    set<int>::iterator it;
    for(i = 0; i < n; i++){
        linked lkd;
        cin>>lkd.adr>>lkd.val>>lkd.nex;
        it = st.find(lkd.adr);
        if(it!=st.end()) continue;
        st.insert(lkd.adr);
        mp[lkd.adr] = lkd;
    }
    vector<linked> vec3[3];
    linked lkd;
    while(s0!=-1){
        lkd = mp[s0];
        if(lkd.val<0) vec3[0].push_back(lkd);
        else if(lkd.val<=m) vec3[1].push_back(lkd);
        else vec3[2].push_back(lkd);
        s0 = lkd.nex;
    }
    for(i=0; i<vec3[0].size(); i++){
        printf("%05d %d ", vec3[0][i].adr, vec3[0][i].val);
        if(i!=(vec3[0].size()-1)) printf("%05d\n", vec3[0][i+1].adr);
    }
    if(vec3[0].size()>0&&vec3[1].size()>0) printf("%05d\n", vec3[1][0].adr);
    for(i=0; i<vec3[1].size(); i++){
        printf("%05d %d ", vec3[1][i].adr, vec3[1][i].val);
        if(i!=(vec3[1].size()-1)) printf("%05d\n", vec3[1][i+1].adr);
    }   
    if(vec3[1].size()>0&&vec3[2].size()>0) printf("%05d\n", vec3[2][0].adr);
    for(i=0; i<vec3[2].size(); i++){
        printf("%05d %d ", vec3[2][i].adr, vec3[2][i].val);
        if(i!=(vec3[2].size()-1)) printf("%05d\n", vec3[2][i+1].adr);
    }   
    cout<<"-1";
    return 0;
}
