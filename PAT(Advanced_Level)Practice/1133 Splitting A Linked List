update
#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<unordered_map>
using namespace std;
struct nod {int add, val, nex;};
int main(void) {
    int i, j, k, m, n, x, y, z, rot, N, K;
    cin>>rot>>N>>K;
    unordered_map<int, nod> arr;
    vector<nod> gK, neg, lK, res;
    nod nd;
    for(i = 0; i < N; i++) {
        cin>>nd.add>>nd.val>>nd.nex;
        arr[nd.add] = nd;
    }
    while(true) {
        if(rot==-1) break;
        if(arr[rot].val < 0) neg.push_back(arr[rot]);
        else if(arr[rot].val <= K) lK.push_back(arr[rot]);
        else gK.push_back(arr[rot]);
        rot = arr[rot].nex;
    }
    for(i = 0; i < neg.size(); i++) res.push_back(neg[i]);
    for(i = 0; i < lK.size(); i++) res.push_back(lK[i]);
    for(i = 0; i < gK.size(); i++) res.push_back(gK[i]);
    for(i = 0; i < res.size() - 1; i++) printf("%05d %d %05d\n", res[i].add, res[i].val, res[i+1].add);
    printf("%05d %d -1\n", res[i].add, res[i].val);
    return 0;
}

old before
#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<map>
#include<set>
#include<bits/stdc++.h>

using namespace std;

struct linked{
    int adr;
    int val;
    int nex;
};

int main(void){
    string s3,s6;
    int s0;
    int n, m, i, j, num;
    cin>>s0>>n>>m;
    vector<int> vec;
    map<int, linked> mp;
    string end = {"-1"};
    set<int> st;
    set<int>::iterator it;
    for(i = 0; i < n; i++){
        linked lkd;
        cin>>lkd.adr>>lkd.val>>lkd.nex;
        it = st.find(lkd.adr);
        if(it!=st.end()) continue;
        st.insert(lkd.adr);
        mp[lkd.adr] = lkd;
    }
    vector<linked> vec3[3];
    linked lkd;
    while(s0!=-1){
        lkd = mp[s0];
        if(lkd.val<0) vec3[0].push_back(lkd);
        else if(lkd.val<=m) vec3[1].push_back(lkd);
        else vec3[2].push_back(lkd);
        s0 = lkd.nex;
    }
    for(i=0; i<vec3[0].size(); i++){
        printf("%05d %d ", vec3[0][i].adr, vec3[0][i].val);
        if(i!=(vec3[0].size()-1)) printf("%05d\n", vec3[0][i+1].adr);
    }
    if(vec3[0].size()>0&&vec3[1].size()>0) printf("%05d\n", vec3[1][0].adr);
    for(i=0; i<vec3[1].size(); i++){
        printf("%05d %d ", vec3[1][i].adr, vec3[1][i].val);
        if(i!=(vec3[1].size()-1)) printf("%05d\n", vec3[1][i+1].adr);
    }   
    if(vec3[1].size()>0&&vec3[2].size()>0) printf("%05d\n", vec3[2][0].adr);
    for(i=0; i<vec3[2].size(); i++){
        printf("%05d %d ", vec3[2][i].adr, vec3[2][i].val);
        if(i!=(vec3[2].size()-1)) printf("%05d\n", vec3[2][i+1].adr);
    }   
    cout<<"-1";
    return 0;
}
